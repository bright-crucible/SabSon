---
services:
    sabnzbd:
        build: sabnzbd
        image: cronos/sabnzbd
        hostname: sabnzbd
        restart: unless-stopped
        volumes:
            - $PWD/data/usenet:/data/usenet
            - $PWD/config/sabnzbd:/home/sabnzbd/.sabnzbd
        ports:
            - "127.0.0.1:8080:8080/tcp"
    sonarr:
        build: sonarr
        image: cronos/sonarr
        hostname: sonarr
        restart: unless-stopped
        volumes:
            - $PWD/data:/data
            - $PWD/config/sonarr:/home/sonarr/.config/Sonarr
        ports:
            - "127.0.0.1:8989:8989/tcp"
        depends_on:
            - "sabnzbd"
            - "nzbhydra2"
    radarr:
        build: radarr
        image: cronos/radarr
        hostname: radarr
        restart: unless-stopped
        volumes:
            - $PWD/data:/data
            - $PWD/config/radarr:/home/radarr/.config/Radarr
        ports:
            - "127.0.0.1:7878:7878/tcp"
        depends_on:
            - "sabnzbd"
            - "nzbhydra2"
    lidarr:
        build: lidarr
        image: cronos/lidarr
        hostname: lidarr
        restart: unless-stopped
        volumes:
            - $PWD/data:/data
            - $PWD/config/lidarr:/home/lidarr/.config/Lidarr
        ports:
            - "127.0.0.1:8686:8686/tcp"
        depends_on:
            - "sabnzbd"
            - "nzbhydra2"
    nzbhydra2:
        build: nzbhydra2
        image: cronos/nzbhydra2
        hostname: nzbhydra2
        restart: unless-stopped
        volumes:
            - $PWD/config/nzbhydra2:/config
        ports:
            - "127.0.0.1:5076:5076/tcp"
        depends_on:
            - "sabnzbd"
    rproxy:
        build: rproxy
        image: cronos/rproxy
        hostname: rproxy
        restart: unless-stopped
        volumes:
            - $PWD/config/nginx:/usr/share/nginx:ro
            - $PWD/config/nginx-config:/etc/nginx/sites-available:ro
        ports:
            - "4209:4209/tcp"
        depends_on:
            - "sabnzbd"
            - "sonarr"
            - "radarr"
            - "lidarr"
            - "nzbhydra2"
    plex:
        image: lscr.io/linuxserver/plex:latest
        hostname: plex
        runtime: nvidia
        container_name: plex
        network_mode: host
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
            - VERSION=docker
            - UMASK=022
            - NVIDIA_VISIBLE_DEVICES=all
        volumes:
            - $PWD/config/plex:/config
            - $PWD/config/plex-transcode:/transcode
            - $PWD/config/home-video:/home-video:ro
            - $PWD/data:/data:ro
        restart: unless-stopped
    jellyfin:
        image: lscr.io/linuxserver/jellyfin:latest
        hostname: jellyfin
        runtime: nvidia
        container_name: jellyfin
        network_mode: host
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
            - NVIDIA_VISIBLE_DEVICES=all
        volumes:
            - $PWD/config/jellyfin:/config
            - $PWD/config/jellyfin-cache:/cache
            - $PWD/config/home-video:/home-video:ro
            - $PWD/data:/data:ro
        restart: unless-stopped
        extra_hosts:
            - 'host.docker.internal:host-gateway'
